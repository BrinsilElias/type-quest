---
interface Config {
  id: string;
  label: string;
  value: string;
  checked?: boolean;
}

interface Props {
  name?: string;
  config: Config[];
  type: astroHTML.JSX.HTMLInputTypeAttribute;
}

const { config, name, type } = Astro.props;
---

<style>
  ul {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-s);
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .form-control {
    font-weight: var(--font-weight-6);
    cursor: pointer;

    &:has(input[type='radio']:checked, input[type='checkbox']:checked) {
      color: var(--accent-color);
    }
  }

  input[type='radio'],
  input[type='checkbox'] {
    -webkit-appearance: none;
    appearance: none;
    background-color: #fff;
    margin: 0;
    width: 0;
    height: 0;

    &:checked {
      outline: none;
      border: none;
    }
  }
</style>

<ul>
  {
    config.map(({ id, label, value, checked }) => (
      <li>
        <label class="form-control">
          <input
            id={id}
            type={type}
            name={name}
            value={value}
            checked={checked}
          />
          {label}
        </label>
      </li>
    ))
  }
</ul>
